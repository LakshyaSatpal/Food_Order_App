[{"C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\index.js":"1","C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\App.js":"2","C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\Layout\\Header.js":"3","C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\Layout\\HeaderCartButton.js":"4","C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\Cart\\CartIcon.js":"5","C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\Meals\\Meals.js":"6","C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\Meals\\MealsSummary.js":"7","C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\Meals\\AvailableMeals.js":"8","C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\Meals\\MealItem.js":"9","C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\UI\\Card.js":"10","C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\Meals\\MealItemForm.js":"11","C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\UI\\Input.js":"12","C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\Cart\\Cart.js":"13","C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\UI\\Modal.js":"14","C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\UI\\Backdrop.js":"15","C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\store\\CartProvider.js":"16","C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\store\\cart-context.js":"17","C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\Cart\\CartItem.js":"18","C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\Cart\\Checkout.js":"19"},{"size":142,"mtime":1616594953000,"results":"20","hashOfConfig":"21"},{"size":665,"mtime":1623428880266,"results":"22","hashOfConfig":"21"},{"size":644,"mtime":1623243053965,"results":"23","hashOfConfig":"21"},{"size":1227,"mtime":1623478800145,"results":"24","hashOfConfig":"21"},{"size":501,"mtime":1622814550569,"results":"25","hashOfConfig":"21"},{"size":290,"mtime":1622911147565,"results":"26","hashOfConfig":"21"},{"size":576,"mtime":1622909905313,"results":"27","hashOfConfig":"21"},{"size":1876,"mtime":1624780439649,"results":"28","hashOfConfig":"21"},{"size":851,"mtime":1623434680107,"results":"29","hashOfConfig":"21"},{"size":189,"mtime":1622912215932,"results":"30","hashOfConfig":"21"},{"size":1188,"mtime":1623433412786,"results":"31","hashOfConfig":"21"},{"size":325,"mtime":1623432543289,"results":"32","hashOfConfig":"21"},{"size":3225,"mtime":1624794428670,"results":"33","hashOfConfig":"21"},{"size":712,"mtime":1623319681504,"results":"34","hashOfConfig":"21"},{"size":183,"mtime":1623319672560,"results":"35","hashOfConfig":"21"},{"size":2673,"mtime":1624794317334,"results":"36","hashOfConfig":"21"},{"size":219,"mtime":1624794316107,"results":"37","hashOfConfig":"21"},{"size":635,"mtime":1623435080447,"results":"38","hashOfConfig":"21"},{"size":3244,"mtime":1624792870149,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"47qv4n",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\index.js",[],["82","83"],"C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\App.js",[],"C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\Layout\\Header.js",["84","85"],"import React from \"react\";\r\nimport classes from \"./Header.module.css\";\r\nimport mealsImage from \"../../assets/meals.jpg\"; // images have to be imported in React\r\nimport HeaderCartButton from \"./HeaderCartButton\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <header className={classes.header}>\r\n        <h1>ReactMeals</h1>\r\n        <HeaderCartButton onClick={props.onCartClick} />\r\n      </header>\r\n      <div className={classes[\"main-image\"]}>\r\n        // if css class has a dash it has to be added like this\r\n        <img src={mealsImage} />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\Layout\\HeaderCartButton.js",[],"C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\Cart\\CartIcon.js",[],"C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\Meals\\Meals.js",[],"C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\Meals\\MealsSummary.js",[],"C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\Meals\\AvailableMeals.js",[],"C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\Meals\\MealItem.js",[],"C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\UI\\Card.js",[],"C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\Meals\\MealItemForm.js",["86"],"import React, { useContext, useRef, useState } from \"react\";\r\nimport classes from \"./MealItemForm.module.css\";\r\nimport Input from \"../UI/Input\";\r\n\r\nconst MealItemForm = (props) => {\r\n  const [amountIsValid, setAmountIsValid] = useState(true);\r\n\r\n  const amountRef = useRef();\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredAmount = amountRef.current.value;\r\n    const enteredAmountNumber = +enteredAmount;\r\n\r\n    if (\r\n      enteredAmount.trim().length === 0 ||\r\n      enteredAmountNumber < 1 ||\r\n      enteredAmountNumber > 5\r\n    ) {\r\n      setAmountIsValid(false);\r\n      return;\r\n    }\r\n\r\n    props.onAddToCart(enteredAmountNumber);\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={submitHandler}>\r\n      <Input\r\n        ref={amountRef}\r\n        label=\"Amount\"\r\n        input={{\r\n          id: `amount_` + props.id,\r\n          type: \"number\",\r\n          min: \"1\",\r\n          max: \"5\",\r\n          step: \"1\",\r\n          defaultValue: \"1\",\r\n        }}\r\n      />\r\n      <button type=\"submit\">+ Add</button>\r\n      {!amountIsValid && <p>Please enter a valid amount (1-5)</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MealItemForm;\r\n","C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\UI\\Input.js",[],"C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\Cart\\Cart.js",["87"],"import React, { useContext, useState } from \"react\";\r\nimport classes from \"./Cart.module.css\";\r\nimport Modal from \"../UI/Modal\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport CartItem from \"./CartItem\";\r\nimport Checkout from \"./Checkout\";\r\nconst Cart = (props) => {\r\n  const cartCtx = useContext(CartContext);\r\n  const [toCheckout, setToCheckout] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [didSubmit, setDidSubmit] = useState(false);\r\n  const cartItemAddHandler = (item) => {\r\n    cartCtx.addItem({ ...item, amount: 1 });\r\n  };\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartCtx.items.map((cartItem) => (\r\n        <CartItem\r\n          name={cartItem.name}\r\n          key={cartItem.id}\r\n          amount={cartItem.amount}\r\n          price={cartItem.price}\r\n          onRemove={cartItemRemoveHandler.bind(null, cartItem.id)} // bind will send arguments but not execute the function\r\n          onAdd={cartItemAddHandler.bind(null, cartItem)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const orderHandler = () => {\r\n    setToCheckout(true);\r\n  };\r\n\r\n  const cancelCheckoutHandler = () => {\r\n    setToCheckout(false);\r\n  };\r\n\r\n  const submitOrderHandler = async (userData) => {\r\n    setIsSubmitting(true);\r\n    const response = await fetch(\r\n      \"https://react-http-4d24a-default-rtdb.firebaseio.com/orders.json\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          user: userData,\r\n          orderedItems: cartCtx.items,\r\n        }),\r\n      }\r\n    );\r\n    setIsSubmitting(false);\r\n    setDidSubmit(true);\r\n    cartCtx.clearCart();\r\n  };\r\n\r\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCtx.items.length > 0;\r\n  const modalActions = (\r\n    <div className={classes.actions}>\r\n      <button className={classes[\"button--alt\"]} onClick={props.onCloseClick}>\r\n        Close\r\n      </button>\r\n      {hasItems && (\r\n        <button className={classes.button} onClick={orderHandler}>\r\n          Order\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const modalContent = (\r\n    <React.Fragment>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Total amount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      {toCheckout && (\r\n        <Checkout\r\n          onConfirm={submitOrderHandler}\r\n          onCancel={cancelCheckoutHandler}\r\n        />\r\n      )}\r\n      {!toCheckout && modalActions}\r\n    </React.Fragment>\r\n  );\r\n\r\n  const isSubmittingModalContent = <p>Sending Order</p>;\r\n\r\n  const didSubmitModalContent = (\r\n    <React.Fragment>\r\n      <p>Successfully sent the order</p>\r\n      <div className={classes.actions}>\r\n        <button className={classes[\"button--alt\"]} onClick={props.onCloseClick}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n  return (\r\n    <Modal onClick={props.onCloseClick}>\r\n      {!isSubmitting && !didSubmit && modalContent}\r\n      {isSubmitting && !didSubmit && isSubmittingModalContent}\r\n      {!isSubmitting && didSubmit && didSubmitModalContent}\r\n    </Modal>\r\n  );\r\n};\r\nexport default Cart;\r\n","C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\UI\\Modal.js",[],"C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\UI\\Backdrop.js",[],"C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\store\\CartProvider.js",[],"C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\store\\cart-context.js",[],"C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\Cart\\CartItem.js",[],"C:\\Users\\laksh\\Desktop\\Web Development\\React.js\\Food Order App\\src\\components\\Cart\\Checkout.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":13,"column":46,"nodeType":"94","messageId":"95","endLine":15,"endColumn":9},{"ruleId":"96","severity":1,"message":"97","line":15,"column":9,"nodeType":"98","endLine":15,"endColumn":33},{"ruleId":"99","severity":1,"message":"100","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":27},{"ruleId":"99","severity":1,"message":"103","line":43,"column":11,"nodeType":"101","messageId":"102","endLine":43,"endColumn":19},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","putCommentInBraces","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]